{
  "paragraphs": [
    {
      "text": "%md\n## Apache Spark - DataFrame/DataSet API - základní syntax a práce s daty\n\n### Spark 2.3.4\n* DataFrame: https://spark.apache.org/docs/2.3.4/sql-programming-guide.html\n* RDD:\n    * https://spark.apache.org/docs/2.3.4/rdd-programming-guide.html\n    * příklady: https://wikis.nyu.edu/display/NYUHPC/Big+Data+Tutorial+3%3A+Introduction+to+Spark\n\n### Scala\n* guide: https://www.analyticsvidhya.com/blog/2017/01/scala/\n\n### datové zdroje:\n* http://opendata.praha.eu/\n   * chytry svoz odpadu - historie zaplnitelnosti: http://opendata.praha.eu/dataset/chytry-svoz-odpadu-historicka-data-zaplnenosti\n   * chytry svoz odpadu  - svozy kontejnerů na tříděný odpad: http://opendata.praha.eu/dataset/chytry-svoz-odpadu-svozy-kontejneru-na-trideny-odpad\n   \n### hodí se\n* `df.printSchema()` - vypíše názvy a typy sloupců\n* `df.show(X)`- zobrazí X počet řádků z datasetu, nezáleží na pořadí, nevyvolává action trigger\n* `df.show(false)`- nezkracuje data v zobrazených sloupcích\n\n|| Zeppelin creates and injects sc (SparkContext) and sqlContext (HiveContext or SqlContext)",
      "user": "anonymous",
      "dateUpdated": "2019-10-29 12:18:44.611",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eApache Spark - DataFrame/DataSet API - základní syntax a práce s daty\u003c/h2\u003e\n\u003ch3\u003eSpark 2.3.4\u003c/h3\u003e\n\u003cul\u003e\n  \u003cli\u003eDataFrame: \u003ca href\u003d\"https://spark.apache.org/docs/2.3.4/sql-programming-guide.html\"\u003ehttps://spark.apache.org/docs/2.3.4/sql-programming-guide.html\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003eRDD:\n    \u003cul\u003e\n      \u003cli\u003e\u003ca href\u003d\"https://spark.apache.org/docs/2.3.4/rdd-programming-guide.html\"\u003ehttps://spark.apache.org/docs/2.3.4/rdd-programming-guide.html\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003epříklady: \u003ca href\u003d\"https://wikis.nyu.edu/display/NYUHPC/Big+Data+Tutorial+3%3A+Introduction+to+Spark\"\u003ehttps://wikis.nyu.edu/display/NYUHPC/Big+Data+Tutorial+3%3A+Introduction+to+Spark\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eScala\u003c/h3\u003e\n\u003cul\u003e\n  \u003cli\u003eguide: \u003ca href\u003d\"https://www.analyticsvidhya.com/blog/2017/01/scala/\"\u003ehttps://www.analyticsvidhya.com/blog/2017/01/scala/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003edatové zdroje:\u003c/h3\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ca href\u003d\"http://opendata.praha.eu/\"\u003ehttp://opendata.praha.eu/\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003echytry svoz odpadu - historie zaplnitelnosti: \u003ca href\u003d\"http://opendata.praha.eu/dataset/chytry-svoz-odpadu-historicka-data-zaplnenosti\"\u003ehttp://opendata.praha.eu/dataset/chytry-svoz-odpadu-historicka-data-zaplnenosti\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003echytry svoz odpadu - svozy kontejnerů na tříděný odpad: \u003ca href\u003d\"http://opendata.praha.eu/dataset/chytry-svoz-odpadu-svozy-kontejneru-na-trideny-odpad\"\u003ehttp://opendata.praha.eu/dataset/chytry-svoz-odpadu-svozy-kontejneru-na-trideny-odpad\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ehodí se\u003c/h3\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003edf.printSchema()\u003c/code\u003e - vypíše názvy a typy sloupců\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003edf.show(X)\u003c/code\u003e- zobrazí X počet řádků z datasetu, nezáleží na pořadí, nevyvolává action trigger\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003edf.show(false)\u003c/code\u003e- nezkracuje data v zobrazených sloupcích\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e|| Zeppelin creates and injects sc (SparkContext) and sqlContext (HiveContext or SqlContext)\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721494_-1214949586",
      "id": "20191028-093724_2122815264",
      "dateCreated": "2019-10-28 15:15:21.494",
      "dateStarted": "2019-10-29 12:18:44.631",
      "dateFinished": "2019-10-29 12:18:44.688",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## READ\n* **read** (csv, parquet, avro, textfile, ...)\n* **toDF** (RDD parralelize)\n* IOUtils",
      "user": "anonymous",
      "dateUpdated": "2019-10-29 12:15:00.153",
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eREAD\u003c/h2\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003cem\u003eread\u003c/em\u003e (csv, parquet, avro, textfile, \u0026hellip;)\u003c/li\u003e\n  \u003cli\u003e\u003cem\u003etoDF\u003c/em\u003e (RDD parralelize)\u003c/li\u003e\n  \u003cli\u003ejdbc\u003c/li\u003e\n  \u003cli\u003eIOUtils\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721499_1700764172",
      "id": "20191028-114904_943505836",
      "dateCreated": "2019-10-28 15:15:21.499",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// načtení dataframe \n\n// z kolekce\n\n// ze souboru\n\n// z url (když zbude čas)",
      "user": "anonymous",
      "dateUpdated": "2019-10-29 12:22:23.717",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1572275721499_-16819059",
      "id": "20191028-115012_113346922",
      "dateCreated": "2019-10-28 15:15:21.499",
      "dateStarted": "2019-10-29 12:19:00.033",
      "dateFinished": "2019-10-29 12:19:18.926",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## NARROW transformace\n\nTransformace, které nevyvolávají shuffle (přenos dat po síti), lazy evaulation.\n\n* select\n* withColumn\n* distinct\n* drop\n* filter\n* union",
      "user": "anonymous",
      "dateUpdated": "2019-10-29 12:23:26.287",
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eNARROW transformace\u003c/h2\u003e\n\u003cp\u003eTransformace,které nevyvolávají shuffle (přenos dat po síti), lazy evaulation.\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003eselect\u003c/li\u003e\n  \u003cli\u003ewithColumn\u003c/li\u003e\n  \u003cli\u003edistinct\u003c/li\u003e\n  \u003cli\u003edrop\u003c/li\u003e\n  \u003cli\u003efilter\u003c/li\u003e\n  \u003cli\u003eunion\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721499_984472126",
      "id": "20191028-111633_1032845225",
      "dateCreated": "2019-10-28 15:15:21.499",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// distinct: jaké můžou být minfilllevely?\n\n// withColumn - přidá sloupec, (jméno sloupce, transformační funkce)\n\n// select: projekce\n\n// select: projekce + transformace\n\n// filter: ktere kontejnery byly vyneseny skoro nebo zcela plne\n",
      "user": "anonymous",
      "dateUpdated": "2019-10-29 12:28:38.277",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1572275721500_-820733526",
      "id": "20191028-115108_2018975206",
      "dateCreated": "2019-10-28 15:15:21.500",
      "dateStarted": "2019-10-29 12:28:38.352",
      "dateFinished": "2019-10-29 12:28:38.829",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// EXPLODE vs SPLIT\n// explode\n\n// split\n",
      "user": "anonymous",
      "dateUpdated": "2019-10-29 12:32:37.777",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------------+\n|             value|\n+------------------+\n| [jedna, dva, tri]|\n|[ctyri, pet, sest]|\n+------------------+\n\n+------------------+--------+\n|             value|exploded|\n+------------------+--------+\n| [jedna, dva, tri]|   jedna|\n| [jedna, dva, tri]|     dva|\n| [jedna, dva, tri]|     tri|\n|[ctyri, pet, sest]|   ctyri|\n|[ctyri, pet, sest]|     pet|\n|[ctyri, pet, sest]|    sest|\n+------------------+--------+\n\n+-------------+\n|        value|\n+-------------+\n|jedna;dva;tri|\n+-------------+\n\n+-----+----+----+\n| col1|col2|col3|\n+-----+----+----+\n|jedna| dva| tri|\n+-----+----+----+\n\ndf_exp1: org.apache.spark.sql.DataFrame \u003d [value: array\u003cstring\u003e]\ndf_exp2: org.apache.spark.sql.DataFrame \u003d [value: array\u003cstring\u003e, exploded: string]\ndf_split1: org.apache.spark.sql.DataFrame \u003d [value: string]\ndf_split2: org.apache.spark.sql.DataFrame \u003d [col1: string, col2: string ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721500_-101890263",
      "id": "20191028-125434_1254572877",
      "dateCreated": "2019-10-28 15:15:21.500",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// nacteni datasetu szn2018122019Q3\n\n// UNION\n\n// UNION 2",
      "user": "anonymous",
      "dateUpdated": "2019-10-29 12:52:14.803",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|     id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|\n+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|5252000|       29806|               30|      20|0018/ 050C00471|2018-12-01 05:06:27|            76|          6|       false|\n|5278394|       29808|               30|      20|0018/ 050C00473|2018-12-03 09:08:48|            95|          2|       false|\n|5280954|       29789|               30|      20|0006/ 264C00204|2018-12-03 13:09:24|            89|         13|       false|\n+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\nonly showing top 3 rows\n\nszn2018122019Q3: org.apache.spark.sql.DataFrame \u003d [id: int, container_id: int ... 7 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721502_-1847077772",
      "id": "20191028-095432_287439436",
      "dateCreated": "2019-10-28 15:15:21.502",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## AKCE\n* take\n* collect\n* save",
      "user": "anonymous",
      "dateUpdated": "2019-10-30 09:16:48.469",
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572275721504_-497027006",
      "id": "20191028-111952_432182074",
      "dateCreated": "2019-10-28 15:15:21.504",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// N zaznamu -\u003e podmmnozina\n\n\n// N zaznamu -\u003e N zaznamu\n",
      "user": "anonymous",
      "dateUpdated": "2019-10-30 09:34:30.888",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res40: Array[org.apache.spark.sql.Row] \u003d Array([15270292,30046,50,20,0003/ 014C00513,2019-10-01 05:00:41.0,100,1,false], [15270477,30327,30,20,0001/ 002C01582,2019-10-01 05:01:47.0,38,1,false])\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721506_26105255",
      "id": "20191028-112010_1454345083",
      "dateCreated": "2019-10-28 15:15:21.506",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// save\n",
      "user": "anonymous",
      "dateUpdated": "2019-10-30 09:34:36.575",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572428070960_-166589508",
      "id": "20191030-093430_928791391",
      "dateCreated": "2019-10-30 09:34:30.960",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// repartition, coalesce",
      "user": "anonymous",
      "dateUpdated": "2019-10-30 09:59:51.383",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572429571959_764614059",
      "id": "20191030-095931_1072339765",
      "dateCreated": "2019-10-30 09:59:31.960",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## AKCE\n* aggregační fce\n  * count\n  * min, max, avg\n  * sum, variance,...",
      "user": "anonymous",
      "dateUpdated": "2019-10-30 10:00:01.950",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572426982384_1741029801",
      "id": "20191030-091622_1882214640",
      "dateCreated": "2019-10-30 09:16:22.389",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// COUNT\n// kolik mam zaznamu?\nval szn2019q4_count \u003d szn2019q4.count()\nval szn20182019q3_count \u003d szn2018122019Q3_3.count()\nval szn_count \u003d szn.count().longValue()\n\nprint(\"Počet záznamů:2019q4: \" + szn2019q4_count + \", 2018-2019q3: \" + szn20182019q3_count + \", dohromady tedy: \" +  szn_count)",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.508",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "szn2019q4_count: Long \u003d 1002\nszn20182019q3_count: Long \u003d 22987\nszn_count: Long \u003d 23989\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721507_787829764",
      "id": "20191028-103959_1146384647",
      "dateCreated": "2019-10-28 15:15:21.507",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// získávání informací o datasetu\nszn.show(4)\n//TIP: dataframe szn budeme prepouzivat nekolikrat, co se ale deje ve skutecnosti, znovu nacteme data - znovu aplikujeme transformace a to pri kazde akci -\u003e cache()\nszn.cache()\n\n// pote co u nebudeme pouzivat nezapomene pamet uvlonit\n// szn.unpersist()",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.508",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|      id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|15270292|       30046|               50|      20|0003/ 014C00513|2019-10-01 05:00:41|           100|          1|       false|\n|15270477|       30327|               30|      20|0001/ 002C01582|2019-10-01 05:01:47|            38|          1|       false|\n|15270800|       30064|               30|      20|0003/ 035C00551|2019-10-01 05:12:45|            44|         16|       false|\n|15270879|       30116|               30|      20|0003/ 084C00644|2019-10-01 05:12:49|           100|         10|       false|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\nonly showing top 4 rows\n\nres82: szn.type \u003d [id: int, container_id: int ... 7 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721508_-1585096079",
      "id": "20191028-124535_1200032620",
      "dateCreated": "2019-10-28 15:15:21.508",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// kolik unikátních odpadových kontejnerů máme\nval container_id\u003dszn.select(\"container_id\").distinct()\nval container_id_count \u003d container_id.count()\ncontainer_id.show(3)\n\n// jaká je nevyšší, nejnižší zaplněnost\nval minmax\u003d szn.select(min($\"percent_now\"), max($\"percent_now\"))\nminmax.show()\n\n// dalsi info\nval szn_ids\u003dszn.select(\"id\").distinct()\nval ids_count \u003d szn_ids.count()\nszn_ids.show(3)\n\nval pick_minfilllevel\u003dszn.select(\"pick_minfilllevel\").distinct()\npick_minfilllevel.show(4)\n\nval kod\u003dszn.select(\"code\").distinct()\nval kod_count \u003d kod.count()\nkod.show(10)\n\nval eventDriven\u003dszn.select(\"event_driven\").distinct()\nval eventDrivenCount \u003d eventDriven.count()\neventDriven.show(2)\n",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.509",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|      id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|15270292|       30046|               50|      20|0003/ 014C00513|2019-10-01 05:00:41|           100|          1|       false|\n|15270477|       30327|               30|      20|0001/ 002C01582|2019-10-01 05:01:47|            38|          1|       false|\n|15270800|       30064|               30|      20|0003/ 035C00551|2019-10-01 05:12:45|            44|         16|       false|\n|15270879|       30116|               30|      20|0003/ 084C00644|2019-10-01 05:12:49|           100|         10|       false|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\nonly showing top 4 rows\n\n+------------+\n|container_id|\n+------------+\n|       29993|\n|       29894|\n|       29834|\n+------------+\nonly showing top 3 rows\n\n+----------------+----------------+\n|min(percent_now)|max(percent_now)|\n+----------------+----------------+\n|               0|              50|\n+----------------+----------------+\n\n+--------+\n|      id|\n+--------+\n|15315806|\n|15328950|\n|15342350|\n+--------+\nonly showing top 3 rows\n\n+-----------------+\n|pick_minfilllevel|\n+-----------------+\n|               40|\n|               35|\n|               50|\n|               30|\n+-----------------+\n\n+---------------+\n|           code|\n+---------------+\n|0006/ 263C00234|\n|0003/ 024C00532|\n|0001/ 016C01532|\n|0001/ 038C00043|\n|0008/ 034C01384|\n|0010/ 265C00453|\n|0016/ 038C01422|\n|0001/ 035C01593|\n|0006/ 260C00165|\n|0009/ 157C00354|\n+---------------+\nonly showing top 10 rows\n\n+------------+\n|event_driven|\n+------------+\n|        null|\n|       false|\n+------------+\n\ncontainer_id: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [container_id: int]\ncontainer_id_count: Long \u003d 420\nminmax: org.apache.spark.sql.DataFrame \u003d [min(percent_now): int, max(percent_now): int]\nszn_ids: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [id: int]\nids_count: Long \u003d 13847\npick_minfilllevel: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [pick_minfilllevel: int]\nkod: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [code: string]\nkod_count: Long \u003d 429\neventDriven: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [event_driven: boolean]\neventDrivenCount: Long \u003d 2\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721509_-544259861",
      "id": "20191028-105655_287503105",
      "dateCreated": "2019-10-28 15:15:21.509",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// TODO md\n// TIPS \u0026 TRICKS\n\n// v cem se casto chybuje \nval df \u003d szn.filter(\"percent_now\" \u003e 50)\n\n// projde\nval df \u003d szn.filter(szn(\"percent_now\") \u003e 20)\n\n// syntax scala zkratka $\nval need \u003d szn.filter($\"percent_now\" \u003e 20)\nneed.show()",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.509",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572275721509_1726404722",
      "id": "20191028-113901_174018730",
      "dateCreated": "2019-10-28 15:15:21.509",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Transformace (typicky) Wide: (můžou způsobit shuffle)\n\n* groupByKey\n   * *groupBy, agg{...}* \n* *distinct*\n* intersection\n* repartition\n* *coalesce*\n* cogroup\n* groupWith\n* join\n   * leftOuterJoin\n   * rightOuterJoin",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.510",
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572275721510_1132945627",
      "id": "20191028-114108_1299416038",
      "dateCreated": "2019-10-28 15:15:21.510",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "szn.show(5)",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.510",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|      id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|15270292|       30046|               50|      20|0003/ 014C00513|2019-10-01 05:00:41|           100|          1|       false|\n|15270477|       30327|               30|      20|0001/ 002C01582|2019-10-01 05:01:47|            38|          1|       false|\n|15270800|       30064|               30|      20|0003/ 035C00551|2019-10-01 05:12:45|            44|         16|       false|\n|15270879|       30116|               30|      20|0003/ 084C00644|2019-10-01 05:12:49|           100|         10|       false|\n|15271061|       29927|               30|      20|0006/ 262C00242|2019-10-01 05:19:44|           100|          0|       false|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\nonly showing top 5 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721510_-1186814765",
      "id": "20191028-122708_279857358",
      "dateCreated": "2019-10-28 15:15:21.510",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//groupBy: kolikrat byl ktery kontejner vysypan v unoru 2019?\nval vysypan\u003dszn.select($\"container_id\",$\"pick_at_utc\")\nval vysypan2 \u003d vysypan.filter($\"pick_at_utc\".contains(\"2019-02\"))\nval vysypan3 \u003d vysypan2.groupBy(\"container_id\").count()\nvysypan3.show(5)\n",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.513",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------+-----+\n|container_id|count|\n+------------+-----+\n|       29894|   12|\n|       29993|    2|\n|       29950|   14|\n|       29827|   10|\n|       30330|   22|\n+------------+-----+\nonly showing top 5 rows\n\nvysypan: org.apache.spark.sql.DataFrame \u003d [container_id: int, pick_at_utc: timestamp]\nvysypan2: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [container_id: int, pick_at_utc: timestamp]\nvysypan3: org.apache.spark.sql.DataFrame \u003d [container_id: int, count: bigint]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721510_955254940",
      "id": "20191028-110645_1932819943",
      "dateCreated": "2019-10-28 15:15:21.510",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.sql.functions._\nval vysypan_datum \u003d vysypan.withColumn(\"date\", substring($\"pick_at_utc\",0,10)).withColumn(\"year\", substring($\"pick_at_utc\",0,4)).withColumn(\"month\", substring($\"pick_at_utc\",6,2)).drop($\"pick_at_utc\")\nvysypan_datum.show(3)",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.517",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------+----------+----+-----+\n|container_id|      date|year|month|\n+------------+----------+----+-----+\n|       30046|2019-10-01|2019|   10|\n|       30327|2019-10-01|2019|   10|\n|       30064|2019-10-01|2019|   10|\n+------------+----------+----+-----+\nonly showing top 3 rows\n\nimport org.apache.spark.sql.functions._\nvysypan_datum: org.apache.spark.sql.DataFrame \u003d [container_id: int, date: string ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721514_1535043336",
      "id": "20191028-131046_807834183",
      "dateCreated": "2019-10-28 15:15:21.514",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// multi aggreagace - lze spojovat\nimport org.apache.spark.sql.functions\n\nval agg1 \u003d vysypan_datum.groupBy(\"year\",\"month\").agg(\n    functions.count(\"date\").as(\"celkem\")\n).sort(\"year\",\"month\")\nagg1.show()\n\nagg1.groupBy(\"year\").agg(\n    functions.max(\"celkem\").as(\"nejvice v mesici\"),\n    functions.min(\"celkem\").as(\"nejmin v mesici\")\n).sort(\"year\").show();",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.518",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----+-----+------+\n|year|month|celkem|\n+----+-----+------+\n|2018|   12|   574|\n|2019|   01|  1686|\n|2019|   02|  2234|\n|2019|   03|  2599|\n|2019|   04|  2600|\n|2019|   05|  3033|\n|2019|   06|  2734|\n|2019|   07|  3193|\n|2019|   08|  2781|\n|2019|   09|  1553|\n|2019|   10|  1002|\n+----+-----+------+\n\n+----+----------------+---------------+\n|year|nejvice v mesici|nejmin v mesici|\n+----+----------------+---------------+\n|2018|             574|            574|\n|2019|            3193|           1002|\n+----+----------------+---------------+\n\nimport org.apache.spark.sql.functions\nagg1: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [year: string, month: string ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721518_794014260",
      "id": "20191028-123800_1146633843",
      "dateCreated": "2019-10-28 15:15:21.518",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "agg1.registerTempTable(\"rok_mesic_vyneseni\")",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.519",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721519_-1698562749",
      "id": "20191028-132959_737440955",
      "dateCreated": "2019-10-28 15:15:21.519",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nselect * from rok_mesic_vyneseni",
      "user": "anonymous",
      "dateUpdated": "2019-10-29 20:54:09.971",
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300.0,
              "optionOpen": true,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "year",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "month",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "celkem",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "year": "string",
                      "month": "string",
                      "celkem": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": true
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "month",
                  "index": 1.0,
                  "aggr": "sum"
                },
                {
                  "name": "year",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "month",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "year\tmonth\tcelkem\n2018\t12\t574\n2019\t01\t1686\n2019\t02\t2234\n2019\t03\t2599\n2019\t04\t2600\n2019\t05\t3033\n2019\t06\t2734\n2019\t07\t3193\n2019\t08\t2781\n2019\t09\t1553\n2019\t10\t1002\n"
          },
          {
            "type": "TEXT",
            "data": ""
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721519_1808944850",
      "id": "20191028-132950_743763809",
      "dateCreated": "2019-10-28 15:15:21.519",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### JOIN\n\n* broadcast\n* left\n* right",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.520",
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572275721520_-2042501195",
      "id": "20191028-133352_2120525987",
      "dateCreated": "2019-10-28 15:15:21.520",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// TODO male ukazky typu joinu\n// left join\n\n// right join\n\n// outerjoin\n\n\n// broadcast join\n\n// inner",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.521",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572275721521_622374419",
      "id": "20191028-134712_683869744",
      "dateCreated": "2019-10-28 15:15:21.521",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// nas dataset a chytry odpad Prahy iOT\n// historie zaplnenosti nadob\nval hist2019q4 \u003d spark.read.format(\"csv\")\n  .option(\"sep\", \";\")\n  .option(\"inferSchema\", \"true\")\n  .option(\"header\", \"true\")\n  .load(\"historie-zaplnenosti-nadob-2019-q4.csv\")\n\nhist2019q4.printSchema()\nhist2019q4.show(10)",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.521",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- id: integer (nullable \u003d true)\n |-- container_id: integer (nullable \u003d true)\n |-- code: string (nullable \u003d true)\n |-- percent_calculated: integer (nullable \u003d true)\n |-- upturned: integer (nullable \u003d true)\n |-- temperature: integer (nullable \u003d true)\n |-- battery_status: double (nullable \u003d true)\n |-- measured_at_utc: timestamp (nullable \u003d true)\n |-- prediction_utc: string (nullable \u003d true)\n |-- firealarm: integer (nullable \u003d true)\n\n+--------+------------+---------------+------------------+--------+-----------+--------------+-------------------+--------------------+---------+\n|      id|container_id|           code|percent_calculated|upturned|temperature|battery_status|    measured_at_utc|      prediction_utc|firealarm|\n+--------+------------+---------------+------------------+--------+-----------+--------------+-------------------+--------------------+---------+\n|15681053|       30039|0003/ 013C00501|                90|       0|         12|           3.6|2019-10-21 07:18:56|                null|        0|\n|15681051|       30007|0009/ 159C00371|                87|       0|         13|           3.6|2019-10-21 07:18:01|                null|        0|\n|15681045|       30291|0001/ 012C00656|                 0|       0|         11|           3.6|2019-10-21 07:17:12|2019-10-29T11:17:...|        0|\n|15681024|       29820|0006/ 263C00233|               100|       0|         11|           3.6|2019-10-21 07:15:33|                null|        0|\n|15680993|       30038|0003/ 012C00497|                18|       0|         14|           3.6|2019-10-21 07:14:21|2019-11-07T16:42:...|        0|\n|15680974|       29898|0001/ 038C00043|                58|       0|         12|           3.7|2019-10-21 07:13:04|2019-10-25T20:38:...|        0|\n|15680966|       30021|0009/ 161C00395|                57|       0|         15|           3.6|2019-10-21 07:12:38|2019-10-30T20:19:...|        0|\n|15680956|       30290|0001/ 012C00655|                 0|       0|         13|           3.6|2019-10-21 07:12:25|2019-11-08T16:12:...|        0|\n|15680955|       30090|0003/ 041C00601|                 9|       0|         11|           3.6|2019-10-21 07:12:17|2019-11-20T21:02:...|        0|\n|15680934|       30008|0009/ 159C00372|                54|       0|         14|           3.6|2019-10-21 07:11:20|2019-10-29T02:38:...|        0|\n+--------+------------+---------------+------------------+--------+-----------+--------------+-------------------+--------------------+---------+\nonly showing top 10 rows\n\nhist2019q4: org.apache.spark.sql.DataFrame \u003d [id: int, container_id: int ... 8 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721521_-708994947",
      "id": "20191028-133644_1955477241",
      "dateCreated": "2019-10-28 15:15:21.521",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// nas dataset a chytry odpad Prahy iOT\n\nval hist2019q4_count \u003d hist2019q4.count()\nval szn2019q4_count \u003d szn2019q4.count()\n\n// inner join\nval shjoin \u003d hist2019q4.join(szn2019q4,szn2019q4(\"container_id\") \u003d\u003d\u003d hist2019q4(\"container_id\"), \"inner\")\nshjoin.show(1)\n\n// mame dvakrat container_id :/\nval shjoin2 \u003d hist2019q4.join(szn2019q4,szn2019q4(\"container_id\") \u003d\u003d\u003d hist2019q4(\"container_id\"), \"inner\").drop(szn2019q4(\"container_id\"))\n\nshjoin2.show(1)\n\n// porad ale trosku nesmysl, chci spojit data ze stejneho dne\nval hist2019q4_2 \u003d hist2019q4.withColumn(\"event_date\", substring($\"measured_at_utc\",0,10))\nval szn2019q4_2 \u003d szn2019q4.withColumn(\"event_date\", substring($\"pick_at_utc\",0,10))\n\nval shjoin3 \u003d hist2019q4_2.join(szn2019q4_2,szn2019q4_2(\"container_id\") \u003d\u003d\u003d hist2019q4_2(\"container_id\") \u0026\u0026 szn2019q4_2(\"event_date\") \u003d\u003d\u003d hist2019q4_2(\"event_date\") , \"outer\").drop(szn2019q4_2(\"container_id\")).drop(szn2019q4_2(\"event_date\"))\n\nshjoin3.show(1)",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.523",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------+------------+---------------+------------------+--------+-----------+--------------+-------------------+--------------+---------+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|      id|container_id|           code|percent_calculated|upturned|temperature|battery_status|    measured_at_utc|prediction_utc|firealarm|      id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|\n+--------+------------+---------------+------------------+--------+-----------+--------------+-------------------+--------------+---------+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|15681053|       30039|0003/ 013C00501|                90|       0|         12|           3.6|2019-10-21 07:18:56|          null|        0|15623272|       30039|               30|      20|0003/ 013C00501|2019-10-18 10:18:57|           100|          5|       false|\n+--------+------------+---------------+------------------+--------+-----------+--------------+-------------------+--------------+---------+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\nonly showing top 1 row\n\n+--------+------------+---------------+------------------+--------+-----------+--------------+-------------------+--------------+---------+--------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|      id|container_id|           code|percent_calculated|upturned|temperature|battery_status|    measured_at_utc|prediction_utc|firealarm|      id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|\n+--------+------------+---------------+------------------+--------+-----------+--------------+-------------------+--------------+---------+--------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|15681053|       30039|0003/ 013C00501|                90|       0|         12|           3.6|2019-10-21 07:18:56|          null|        0|15623272|               30|      20|0003/ 013C00501|2019-10-18 10:18:57|           100|          5|       false|\n+--------+------------+---------------+------------------+--------+-----------+--------------+-------------------+--------------+---------+--------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\nonly showing top 1 row\n\n+--------+------------+---------------+------------------+--------+-----------+--------------+-------------------+--------------------+---------+----------+----+-----------------+--------+----+-----------+--------------+-----------+------------+\n|      id|container_id|           code|percent_calculated|upturned|temperature|battery_status|    measured_at_utc|      prediction_utc|firealarm|event_date|  id|pick_minfilllevel|decrease|code|pick_at_utc|percent_before|percent_now|event_driven|\n+--------+------------+---------------+------------------+--------+-----------+--------------+-------------------+--------------------+---------+----------+----+-----------------+--------+----+-----------+--------------+-----------+------------+\n|15512725|       29787|0006/ 264C00202|                48|       0|         17|           3.6|2019-10-12 18:03:32|2019-11-07T21:06:...|        0|2019-10-12|null|             null|    null|null|       null|          null|       null|        null|\n+--------+------------+---------------+------------------+--------+-----------+--------------+-------------------+--------------------+---------+----------+----+-----------------+--------+----+-----------+--------------+-----------+------------+\nonly showing top 1 row\n\nhist2019q4_count: Long \u003d 44731\nszn2019q4_count: Long \u003d 1002\nshjoin: org.apache.spark.sql.DataFrame \u003d [id: int, container_id: int ... 17 more fields]\nshjoin2: org.apache.spark.sql.DataFrame \u003d [id: int, container_id: int ... 16 more fields]\nhist2019q4_2: org.apache.spark.sql.DataFrame \u003d [id: int, container_id: int ... 9 more fields]\nszn2019q4_2: org.apache.spark.sql.DataFrame \u003d [id: int, container_id: int ... 8 more fields]\nshjoin3: org.apache.spark.sql.DataFrame \u003d [id: int, container_id: int ... 17 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721523_70680391",
      "id": "20191028-133847_1281814611",
      "dateCreated": "2019-10-28 15:15:21.523",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### UDF\n\u003d User Defined Function\nv podstate ma Spark API \"jenom\" spoustu predpripravenych, pokud ale chceme nejakou specialni transformaci, tak musime napsat vlastni udf\n",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.525",
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572275721524_499474214",
      "id": "20191028-140217_133811049",
      "dateCreated": "2019-10-28 15:15:21.524",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// zjistit informace o kontejneru 30039\n\n// filter \u0026 select\nval nadoba30039 \u003d shjoin3.filter($\"container_id\" \u003d\u003d\u003d 30039).select(\"event_date\",\"container_id\",\"percent_calculated\",\"temperature\",\"battery_status\",\"measured_at_utc\",\"pick_at_utc\",\"percent_before\",\"percent_now\")\nnadoba30039.show(5)\n\n// moje vlastni udf\nimport org.apache.spark.sql.functions.udf\n\nval measured \u003d udf((eventDate: String, temperature: String) \u003d\u003e {\n    if(eventDate!\u003dnull) \"namerena teplota \" + temperature + \"°C\" else \"nemereno\"\n})\nval picked \u003d udf((eventDate: String, percentNow: String) \u003d\u003e {\n    if(eventDate!\u003dnull) \"vysypano pri zaplnenosti \" + percentNow + \"%\" else \"nevysypano\"\n})\nval bothEvents \u003d udf((picked: String, measured: String) \u003d\u003e {\n    if(picked!\u003dnull \u0026\u0026 measured!\u003dnull) true else false\n})\n\nval nadoba30039_2 \u003d nadoba30039.withColumn(\"info_m\", measured($\"measured_at_utc\",$\"temperature\")).withColumn(\"info_p\", picked($\"pick_at_utc\",$\"percent_before\")).withColumn(\"both_events\", bothEvents($\"pick_at_utc\",$\"measured_at_utc\"))\n\nval nadoba30039_3 \u003d nadoba30039_2.filter(\"both_events\").select(\"event_date\",\"info_m\",\"info_p\").sort(\"event_date\")\n\nnadoba30039_3.show(false)",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.526",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----------+------------+------------------+-----------+--------------+-------------------+-----------+--------------+-----------+\n|event_date|container_id|percent_calculated|temperature|battery_status|    measured_at_utc|pick_at_utc|percent_before|percent_now|\n+----------+------------+------------------+-----------+--------------+-------------------+-----------+--------------+-----------+\n|2019-10-21|       30039|                90|         12|           3.6|2019-10-21 07:18:56|       null|          null|       null|\n|2019-10-21|       30039|                98|         12|           3.6|2019-10-21 04:18:56|       null|          null|       null|\n|2019-10-20|       30039|                92|         14|           3.6|2019-10-20 17:18:58|       null|          null|       null|\n|2019-10-20|       30039|                91|         14|           3.6|2019-10-20 15:18:59|       null|          null|       null|\n|2019-10-20|       30039|                69|         14|           3.6|2019-10-20 13:18:58|       null|          null|       null|\n+----------+------------+------------------+-----------+--------------+-------------------+-----------+--------------+-----------+\nonly showing top 5 rows\n\n+----------+---------------------+-----------------------------+\n|event_date|info_m               |info_p                       |\n+----------+---------------------+-----------------------------+\n|2019-10-01|namerena teplota 13°C|vysypano pri zaplnenosti 100%|\n|2019-10-01|namerena teplota 16°C|vysypano pri zaplnenosti 100%|\n|2019-10-01|namerena teplota 17°C|vysypano pri zaplnenosti 100%|\n|2019-10-01|namerena teplota 14°C|vysypano pri zaplnenosti 100%|\n|2019-10-01|namerena teplota 16°C|vysypano pri zaplnenosti 100%|\n|2019-10-01|namerena teplota 13°C|vysypano pri zaplnenosti 100%|\n|2019-10-04|namerena teplota 9°C |vysypano pri zaplnenosti 93% |\n|2019-10-04|namerena teplota 9°C |vysypano pri zaplnenosti 93% |\n|2019-10-04|namerena teplota 11°C|vysypano pri zaplnenosti 93% |\n|2019-10-04|namerena teplota 11°C|vysypano pri zaplnenosti 93% |\n|2019-10-04|namerena teplota 11°C|vysypano pri zaplnenosti 93% |\n|2019-10-04|namerena teplota 12°C|vysypano pri zaplnenosti 93% |\n|2019-10-08|namerena teplota 10°C|vysypano pri zaplnenosti 100%|\n|2019-10-08|namerena teplota 7°C |vysypano pri zaplnenosti 100%|\n|2019-10-08|namerena teplota 11°C|vysypano pri zaplnenosti 100%|\n|2019-10-08|namerena teplota 7°C |vysypano pri zaplnenosti 100%|\n|2019-10-08|namerena teplota 9°C |vysypano pri zaplnenosti 100%|\n|2019-10-08|namerena teplota 11°C|vysypano pri zaplnenosti 100%|\n|2019-10-11|namerena teplota 11°C|vysypano pri zaplnenosti 63% |\n|2019-10-11|namerena teplota 13°C|vysypano pri zaplnenosti 63% |\n+----------+---------------------+-----------------------------+\nonly showing top 20 rows\n\nnadoba30039: org.apache.spark.sql.DataFrame \u003d [event_date: string, container_id: int ... 7 more fields]\nimport org.apache.spark.sql.functions.udf\nmeasured: org.apache.spark.sql.expressions.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction2\u003e,StringType,Some(List(StringType, StringType)))\npicked: org.apache.spark.sql.expressions.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction2\u003e,StringType,Some(List(StringType, StringType)))\nbothEvents: org.apache.spark.sql.expressions.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction2\u003e,BooleanType,Some(List(StringType, StringType)))\nnadoba30039_2: org.apache.spark.sql.DataFrame \u003d [event_date: string, container_id: int ... 10 more fields]\nnadoba30039_3: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [event_date: string, info_m: string ......"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721525_-1435476127",
      "id": "20191028-135404_319133906",
      "dateCreated": "2019-10-28 15:15:21.525",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## K procvičení (když zbude čas)\n### Formáty\n* parquet\n  * defaultní pro Spark\n  * binární formát\n  * column oriented\n  * hodí se pro projekce (potřebuji z velkých dat, pouze některé sloupčeky)\n* avro\n* csv,tsv\n* json\n   * výhody:\n     * lehce se čte i ostatním mimo Big Data svět (webaři, data science)\n  * pozor: validní json je co file to {}, pro big data se ovšeh hodí pouze validní json per file (správně je ten formát názvem GSON) ",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.526",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eK procvičení (když zbude čas)\u003c/h2\u003e\n\u003ch3\u003eFormáty\u003c/h3\u003e\n\u003cul\u003e\n  \u003cli\u003eparquet\u003c/li\u003e\n  \u003cli\u003edefaultní pro Spark\u003c/li\u003e\n  \u003cli\u003ebinární formát\u003c/li\u003e\n  \u003cli\u003ecolumn oriented\u003c/li\u003e\n  \u003cli\u003ehodí se pro projekce (potřebuji z velkých dat, pouze některé sloupčeky)\u003c/li\u003e\n  \u003cli\u003eavro\u003c/li\u003e\n  \u003cli\u003ecsv,tsv\u003c/li\u003e\n  \u003cli\u003ejson\u003c/li\u003e\n  \u003cli\u003evýhody:\n    \u003cul\u003e\n      \u003cli\u003elehce se čte i ostatním mimo Big Data svět (webaři, data science)\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003epozor: validní json je co file to {}, pro big data se ovšeh hodí pouze validní json per file (správně je ten formát názvem GSON)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721526_236282326",
      "id": "20191028-090125_948111294",
      "dateCreated": "2019-10-28 15:15:21.526",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "case class Person(name: String, age: Long)\n\n// Encoders are created for case classes\nval caseClassDS \u003d Seq(Person(\"Andy\", 32)).toDS()\ncaseClassDS.show()\n// +----+---+\n// |name|age|\n// +----+---+\n// |Andy| 32|\n// +----+---+\n\n// Encoders for most common types are automatically provided by importing spark.implicits._\nval primitiveDS \u003d Seq(1, 2, 3).toDS()\nprimitiveDS.map(_ + 1).collect() // Returns: Array(2, 3, 4)\n\n// DataFrames can be converted to a Dataset by providing a class. Mapping will be done by name\nval path \u003d \"examples/src/main/resources/people.json\"\nval peopleDS \u003d spark.read.json(path).as[Person]\npeopleDS.show()\n// +----+-------+\n// | age|   name|\n// +----+-------+\n// |null|Michael|\n// |  30|   Andy|\n// |  19| Justin|\n// +----+-------+",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.527",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cconsole\u003e:16: error: value toDS is not a member of Seq[Person]\n       val caseClassDS \u003d Seq(Person(\"Andy\", 32)).toDS()\n                                                 ^\n\u003cconsole\u003e:25: error: value toDS is not a member of Seq[Int]\n       val primitiveDS \u003d Seq(1, 2, 3).toDS()\n                                      ^\n\u003cconsole\u003e:30: error: Unable to find encoder for type stored in a Dataset.  Primitive types (Int, String, etc) and Product types (case classes) are supported by importing spark.implicits._  Support for serializing other types will be added in future releases.\n       val peopleDS \u003d spark.read.json(path).as[Person]\n                                              ^\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572275721527_1375610164",
      "id": "20191028-123851_1861184664",
      "dateCreated": "2019-10-28 15:15:21.527",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "read avro, read , json - show",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 15:15:21.527",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572275721527_-911362548",
      "id": "20191028-094001_257022356",
      "dateCreated": "2019-10-28 15:15:21.527",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "spark-simple-zadani",
  "id": "2ERFC2GHX",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}