{
  "paragraphs": [
    {
      "text": "%md\n## Apache Spark - DataFrame/DataSet API - základní syntax a práce s daty\n\n* Spark 2.3.4 DataFrame: https://spark.apache.org/docs/2.3.4/sql-programming-guide.html\n\n* datové zdroje: http://opendata.praha.eu/\n   * chytry svoz odpadu - historie zaplnitelnosti: http://opendata.praha.eu/dataset/chytry-svoz-odpadu-historicka-data-zaplnenosti\n   * chytry svoz odpadu  - svozy kontejnerů na tříděný odpad: http://opendata.praha.eu/dataset/chytry-svoz-odpadu-svozy-kontejneru-na-trideny-odpad\n   \n## hodí se\n* `df.printSchema()` - vypíše názvy a typy sloupců\n* `df.show(X)`- zobrazí X počet řádků z datasetu, nezáleží na pořadí, nevyvolává action trigger \n* Scala guide: https://www.analyticsvidhya.com/blog/2017/01/scala/",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 12:20:16.259",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eApache Spark - základní syntax a práce s daty\u003c/h2\u003e\n\u003cul\u003e\n  \u003cli\u003edatové zdroje: \u003ca href\u003d\"http://opendata.praha.eu/\"\u003ehttp://opendata.praha.eu/\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003echytry svoz odpadu - historie zaplnitelnosti: \u003ca href\u003d\"http://opendata.praha.eu/dataset/chytry-svoz-odpadu-historicka-data-zaplnenosti\"\u003ehttp://opendata.praha.eu/dataset/chytry-svoz-odpadu-historicka-data-zaplnenosti\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003echytry svoz odpadu - svozy kontejnerů na tříděný odpad: \u003ca href\u003d\"http://opendata.praha.eu/dataset/chytry-svoz-odpadu-svozy-kontejneru-na-trideny-odpad\"\u003ehttp://opendata.praha.eu/dataset/chytry-svoz-odpadu-svozy-kontejneru-na-trideny-odpad\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003ehodí se\u003c/h2\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003edf.printSchema()\u003c/code\u003e - vypíše názvy a typy sloupců\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003edf.show(X)\u003c/code\u003e- zobrazí X počet řádků z datasetu, nezáleží na pořadí, nevyvolává action trigger\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572255444776_1730217125",
      "id": "20191028-093724_2122815264",
      "dateCreated": "2019-10-28 09:37:24.776",
      "dateStarted": "2019-10-28 10:34:59.858",
      "dateFinished": "2019-10-28 10:35:01.757",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## READ\n* *read* (csv, parquet, avro, textfile, ...)\n* *toDF* (RDD parralelize)\n* jdbc\n* IOUtils",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 11:57:23.780",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572263344175_1975974396",
      "id": "20191028-114904_943505836",
      "dateCreated": "2019-10-28 11:49:04.175",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// vytvoreni dataframe z kodu\nval pole \u003d List(\"jedna\",\"dva\",\"tri\")\nval dataframe \u003d pole.toDF()\ndataframe.show()\ndataframe.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 12:11:14.471",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-----+\n|value|\n+-----+\n|jedna|\n|  dva|\n|  tri|\n+-----+\n\npole: List[String] \u003d List(jedna, dva, tri)\ndataframe: org.apache.spark.sql.DataFrame \u003d [value: string]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572263412507_2037678123",
      "id": "20191028-115012_113346922",
      "dateCreated": "2019-10-28 11:50:12.507",
      "dateStarted": "2019-10-28 12:00:07.437",
      "dateFinished": "2019-10-28 12:00:07.802",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// načtení souboru\nval szn2019q4 \u003d spark.read.format(\"csv\")\n  .option(\"sep\", \";\")\n  .option(\"inferSchema\", \"true\")\n  .option(\"header\", \"true\")\n  .load(\"detekce-svozu-nadob-2019-q4.csv\")\n\nszn2019q4.printSchema()\nszn2019q4.show(10)",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 12:11:24.880",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "szn2019q4: org.apache.spark.sql.DataFrame \u003d [id: int, container_id: int ... 7 more fields]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d0",
            "http://62067575309b:4040/jobs/job?id\u003d1"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572253272232_-1665768480",
      "id": "20191028-090112_1378723200",
      "dateCreated": "2019-10-28 09:01:12.233",
      "dateStarted": "2019-10-28 10:35:01.881",
      "dateFinished": "2019-10-28 10:35:07.940",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## NARROW transformace\n\nTransformace,které nevyvolávají shuffle (přenos dat po síti), lazy evaulation.\n\n* select\n* withColumn\n* distinct\n* drop\n* filter\n* union",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 12:24:44.644",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572261393476_-282160138",
      "id": "20191028-111633_1032845225",
      "dateCreated": "2019-10-28 11:16:33.476",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// disitnct: jaké můžou být minfilllevely?\nszn2019q4.select(\"pick_minfilllevel\").distinct().show()\n\n//  withColumn - přidá sloupec, (jméno sloupce, transformační funkce)\nval zaplnenost \u003d szn2019q4.withColumn(\"zaplnenost\", when($\"percent_before\" \u003e 50, \"hodne\").otherwise(\"malo\") )\nzaplnenost.show(5)\n\n// select: projekce\nzaplnenost.select($\"container_id\",$\"zaplnenost\").show(3)\n\n// select: projekce + transformace\nszn2019q4.select($\"container_id\", $\"pick_minfilllevel\", $\"pick_minfilllevel\" + 20).show(3)\n\n// filter: ktere kontejnery byly vyneseny skoro nebo zcela plne\nval vyneseny \u003d szn.filter($\"percent_before\" \u003e 95 )\nval pocet_vynesenych \u003d vyneseny.count()\nvyneseny.show(5)\n",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 12:54:34.375",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-----------------+\n|pick_minfilllevel|\n+-----------------+\n|               40|\n|               50|\n|               30|\n+-----------------+\n\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+----------+\n|      id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|zaplnenost|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+----------+\n|15270292|       30046|               50|      20|0003/ 014C00513|2019-10-01 05:00:41|           100|          1|       false|     hodne|\n|15270477|       30327|               30|      20|0001/ 002C01582|2019-10-01 05:01:47|            38|          1|       false|      malo|\n|15270800|       30064|               30|      20|0003/ 035C00551|2019-10-01 05:12:45|            44|         16|       false|      malo|\n|15270879|       30116|               30|      20|0003/ 084C00644|2019-10-01 05:12:49|           100|         10|       false|     hodne|\n|15271061|       29927|               30|      20|0006/ 262C00242|2019-10-01 05:19:44|           100|          0|       false|     hodne|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+----------+\nonly showing top 5 rows\n\n+------------+----------+\n|container_id|zaplnenost|\n+------------+----------+\n|       30046|     hodne|\n|       30327|      malo|\n|       30064|      malo|\n+------------+----------+\nonly showing top 3 rows\n\n+------------+-----------------+------------------------+\n|container_id|pick_minfilllevel|(pick_minfilllevel + 20)|\n+------------+-----------------+------------------------+\n|       30046|               50|                      70|\n|       30327|               30|                      50|\n|       30064|               30|                      50|\n+------------+-----------------+------------------------+\nonly showing top 3 rows\n\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|      id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|15270292|       30046|               50|      20|0003/ 014C00513|2019-10-01 05:00:41|           100|          1|       false|\n|15270879|       30116|               30|      20|0003/ 084C00644|2019-10-01 05:12:49|           100|         10|       false|\n|15271061|       29927|               30|      20|0006/ 262C00242|2019-10-01 05:19:44|           100|          0|       false|\n|15271066|       30034|               30|      20|0003/ 012C00493|2019-10-01 05:20:36|           100|          0|       false|\n|15271124|       30060|               50|      20|0003/ 030C00542|2019-10-01 05:25:38|           100|          7|       false|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\nonly showing top 5 rows\n\n+------------------+\n|             value|\n+------------------+\n| [jedna, dva, tri]|\n|[ctyri, pet, sest]|\n+------------------+\n\n+------------------+--------+\n|             value|exploded|\n+------------------+--------+\n| [jedna, dva, tri]|   jedna|\n| [jedna, dva, tri]|     dva|\n| [jedna, dva, tri]|     tri|\n|[ctyri, pet, sest]|   ctyri|\n|[ctyri, pet, sest]|     pet|\n|[ctyri, pet, sest]|    sest|\n+------------------+--------+\n\nzaplnenost: org.apache.spark.sql.DataFrame \u003d [id: int, container_id: int ... 8 more fields]\nvyneseny: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [id: int, container_id: int ... 7 more fields]\npocet_vynesenych: Long \u003d 11479\ndf_exp1: org.apache.spark.sql.DataFrame \u003d [value: array\u003cstring\u003e]\ndf_exp2: org.apache.spark.sql.DataFrame \u003d [value: array\u003cstring\u003e, exploded: string]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d270",
            "http://62067575309b:4040/jobs/job?id\u003d271",
            "http://62067575309b:4040/jobs/job?id\u003d272",
            "http://62067575309b:4040/jobs/job?id\u003d273",
            "http://62067575309b:4040/jobs/job?id\u003d274",
            "http://62067575309b:4040/jobs/job?id\u003d275",
            "http://62067575309b:4040/jobs/job?id\u003d276",
            "http://62067575309b:4040/jobs/job?id\u003d277",
            "http://62067575309b:4040/jobs/job?id\u003d278",
            "http://62067575309b:4040/jobs/job?id\u003d279",
            "http://62067575309b:4040/jobs/job?id\u003d280",
            "http://62067575309b:4040/jobs/job?id\u003d281"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572263468752_-2020833025",
      "id": "20191028-115108_2018975206",
      "dateCreated": "2019-10-28 11:51:08.752",
      "dateStarted": "2019-10-28 12:53:54.516",
      "dateFinished": "2019-10-28 12:53:57.095",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// EXPLODE vs SPLIT\n// explode: FLAT MAP type\nval df_exp1 \u003d List(List(\"jedna\",\"dva\",\"tri\"), List(\"ctyri\",\"pet\",\"sest\")).toDF()\nval df_exp2 \u003d df_exp1.withColumn(\"exploded\", explode($\"value\"))\ndf_exp1.show()\ndf_exp2.show()\n\n// split -\u003e do vice column\nval df_split1 \u003d List(\"jedna;dva;tri\").toDF()\ndf_split1.show()\n\nval df_split2 \u003d df_split1.withColumn(\"_tmp\", split($\"value\", \";\")).select(\n  $\"_tmp\".getItem(0).as(\"col1\"),\n  $\"_tmp\".getItem(1).as(\"col2\"),\n  $\"_tmp\".getItem(2).as(\"col3\")\n).drop(\"_tmp\")\n\ndf_split2.show()",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 13:03:33.577",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------------+\n|             value|\n+------------------+\n| [jedna, dva, tri]|\n|[ctyri, pet, sest]|\n+------------------+\n\n+------------------+--------+\n|             value|exploded|\n+------------------+--------+\n| [jedna, dva, tri]|   jedna|\n| [jedna, dva, tri]|     dva|\n| [jedna, dva, tri]|     tri|\n|[ctyri, pet, sest]|   ctyri|\n|[ctyri, pet, sest]|     pet|\n|[ctyri, pet, sest]|    sest|\n+------------------+--------+\n\n+-------------+\n|        value|\n+-------------+\n|jedna;dva;tri|\n+-------------+\n\n+-----+----+----+\n| col1|col2|col3|\n+-----+----+----+\n|jedna| dva| tri|\n+-----+----+----+\n\ndf_exp1: org.apache.spark.sql.DataFrame \u003d [value: array\u003cstring\u003e]\ndf_exp2: org.apache.spark.sql.DataFrame \u003d [value: array\u003cstring\u003e, exploded: string]\ndf_split1: org.apache.spark.sql.DataFrame \u003d [value: string]\ndf_split2: org.apache.spark.sql.DataFrame \u003d [col1: string, col2: string ... 1 more field]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d284",
            "http://62067575309b:4040/jobs/job?id\u003d285"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572267274476_-2051720064",
      "id": "20191028-125434_1254572877",
      "dateCreated": "2019-10-28 12:54:34.477",
      "dateStarted": "2019-10-28 13:03:04.683",
      "dateFinished": "2019-10-28 13:03:05.504",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// nacteme dalsi data a protoze vime,ze jsou stejna, muzeme spojit do jednoho DataSetu\nval szn2018122019Q3 \u003d spark.read.format(\"csv\")\n  .option(\"sep\", \";\")\n  .option(\"inferSchema\", \"true\")\n  .option(\"header\", \"true\")\n  .load(\"detekce-svozu-nadob-201812-2019Q3.csv\")\n  \nszn2018122019Q3.show(3)",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 10:53:50.169",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|     id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|\n+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|5252000|       29806|               30|      20|0018/ 050C00471|2018-12-01 05:06:27|            76|          6|       false|\n|5278394|       29808|               30|      20|0018/ 050C00473|2018-12-03 09:08:48|            95|          2|       false|\n|5280954|       29789|               30|      20|0006/ 264C00204|2018-12-03 13:09:24|            89|         13|       false|\n+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\nonly showing top 3 rows\n\nszn2018122019Q3: org.apache.spark.sql.DataFrame \u003d [id: int, container_id: int ... 7 more fields]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d4",
            "http://62067575309b:4040/jobs/job?id\u003d5",
            "http://62067575309b:4040/jobs/job?id\u003d6"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572256472727_1936850616",
      "id": "20191028-095432_287439436",
      "dateCreated": "2019-10-28 09:54:32.728",
      "dateStarted": "2019-10-28 10:35:09.684",
      "dateFinished": "2019-10-28 10:35:11.028",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// UNION\nval szn \u003d szn2019q4.union(szn2018122019Q3)",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 10:35:11.087",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "org.apache.spark.sql.AnalysisException: Union can only be performed on tables with the compatible column types. string \u003c\u003e boolean at the 8th column of the second table;;\n\u0027Union\n:- Relation[id#10,container_id#11,pick_minfilllevel#12,decrease#13,code#14,pick_at_utc#15,percent_before#16,percent_now#17,event_driven#18] csv\n+- Relation[id#87,container_id#88,pick_minfilllevel#89,decrease#90,code#91,pick_at_utc#92,percent_before#93,percent_now#94,event_driven#95] csv\n\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.failAnalysis(CheckAnalysis.scala:42)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer.failAnalysis(Analyzer.scala:92)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$11$$anonfun$apply$12.apply(CheckAnalysis.scala:261)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$11$$anonfun$apply$12.apply(CheckAnalysis.scala:258)\n  at scala.collection.immutable.List.foreach(List.scala:381)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$11.apply(CheckAnalysis.scala:258)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$11.apply(CheckAnalysis.scala:247)\n  at scala.collection.immutable.List.foreach(List.scala:381)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:247)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:85)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:127)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:85)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:92)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer.executeAndCheck(Analyzer.scala:105)\n  at org.apache.spark.sql.execution.QueryExecution.analyzed$lzycompute(QueryExecution.scala:57)\n  at org.apache.spark.sql.execution.QueryExecution.analyzed(QueryExecution.scala:55)\n  at org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:47)\n  at org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:74)\n  at org.apache.spark.sql.Dataset.withSetOperator(Dataset.scala:3319)\n  at org.apache.spark.sql.Dataset.union(Dataset.scala:1840)\n  ... 47 elided\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572256802527_-1127095320",
      "id": "20191028-100002_1173038509",
      "dateCreated": "2019-10-28 10:00:02.528",
      "dateStarted": "2019-10-28 10:35:11.187",
      "dateFinished": "2019-10-28 10:35:11.564",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// co s tim? ヽ(`o´)ﾉ, musime pretypovat...\n\nszn2019q4.printSchema()\nszn2018122019Q3.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 10:13:40.529",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- id: integer (nullable \u003d true)\n |-- container_id: integer (nullable \u003d true)\n |-- pick_minfilllevel: integer (nullable \u003d true)\n |-- decrease: integer (nullable \u003d true)\n |-- code: string (nullable \u003d true)\n |-- pick_at_utc: timestamp (nullable \u003d true)\n |-- percent_before: integer (nullable \u003d true)\n |-- percent_now: integer (nullable \u003d true)\n |-- event_driven: boolean (nullable \u003d true)\n\nroot\n |-- id: integer (nullable \u003d true)\n |-- container_id: integer (nullable \u003d true)\n |-- pick_minfilllevel: integer (nullable \u003d true)\n |-- decrease: integer (nullable \u003d true)\n |-- code: string (nullable \u003d true)\n |-- pick_at_utc: timestamp (nullable \u003d true)\n |-- percent_before: integer (nullable \u003d true)\n |-- percent_now: integer (nullable \u003d true)\n |-- event_driven: string (nullable \u003d true)\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572256897573_967693521",
      "id": "20191028-100137_1794046050",
      "dateCreated": "2019-10-28 10:01:37.574",
      "dateStarted": "2019-10-28 10:02:08.437",
      "dateFinished": "2019-10-28 10:02:08.702",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// cast je transformace typu MAP: 1 zaznam -\u003e 1 zaznam transformovany\nimport org.apache.spark.sql.types.BooleanType\n\nval szn2018122019Q3_2 \u003d szn2018122019Q3.withColumn(\"event_driven_tmp\", $\"event_driven\".cast(BooleanType))\n// jenze to stale jeste tak uplne nestaci, dataframes stejne jako RDD jsou immutable kolekce, tj. withColumn nam pouze vytvorilo novou kolekci se sloupcem navic\nszn2018122019Q3_2.printSchema()\nszn2018122019Q3_2.show(2)\n// musime explicitne rict,ze se ma sloupec smazat a nahradit nasim novym\nval szn2018122019Q3_3 \u003d szn2018122019Q3_2.drop(\"event_driven\").withColumnRenamed(\"event_driven_tmp\", \"event_driven\")\nszn2018122019Q3_3.printSchema()\nszn2018122019Q3_3.show(2)\n\n// protoze je toto v podstate 1 map transformace slozena ze tri,lze zapsat i v jenom kroku\nval szn2018122019Q3_4 \u003d szn2018122019Q3.withColumn(\"event_driven_tmp\", $\"event_driven\".cast(BooleanType)).drop(\"event_driven\").withColumnRenamed(\"event_driven_tmp\", \"event_driven\")\nszn2018122019Q3_4.printSchema()\nszn2018122019Q3_4.show(2)",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 12:25:37.751",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- id: integer (nullable \u003d true)\n |-- container_id: integer (nullable \u003d true)\n |-- pick_minfilllevel: integer (nullable \u003d true)\n |-- decrease: integer (nullable \u003d true)\n |-- code: string (nullable \u003d true)\n |-- pick_at_utc: timestamp (nullable \u003d true)\n |-- percent_before: integer (nullable \u003d true)\n |-- percent_now: integer (nullable \u003d true)\n |-- event_driven: string (nullable \u003d true)\n |-- event_driven_tmp: boolean (nullable \u003d true)\n\n+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+----------------+\n|     id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|event_driven_tmp|\n+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+----------------+\n|5252000|       29806|               30|      20|0018/ 050C00471|2018-12-01 05:06:27|            76|          6|       false|           false|\n|5278394|       29808|               30|      20|0018/ 050C00473|2018-12-03 09:08:48|            95|          2|       false|           false|\n+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+----------------+\nonly showing top 2 rows\n\nroot\n |-- id: integer (nullable \u003d true)\n |-- container_id: integer (nullable \u003d true)\n |-- pick_minfilllevel: integer (nullable \u003d true)\n |-- decrease: integer (nullable \u003d true)\n |-- code: string (nullable \u003d true)\n |-- pick_at_utc: timestamp (nullable \u003d true)\n |-- percent_before: integer (nullable \u003d true)\n |-- percent_now: integer (nullable \u003d true)\n |-- event_driven: boolean (nullable \u003d true)\n\n+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|     id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|\n+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|5252000|       29806|               30|      20|0018/ 050C00471|2018-12-01 05:06:27|            76|          6|       false|\n|5278394|       29808|               30|      20|0018/ 050C00473|2018-12-03 09:08:48|            95|          2|       false|\n+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\nonly showing top 2 rows\n\nroot\n |-- id: integer (nullable \u003d true)\n |-- container_id: integer (nullable \u003d true)\n |-- pick_minfilllevel: integer (nullable \u003d true)\n |-- decrease: integer (nullable \u003d true)\n |-- code: string (nullable \u003d true)\n |-- pick_at_utc: timestamp (nullable \u003d true)\n |-- percent_before: integer (nullable \u003d true)\n |-- percent_now: integer (nullable \u003d true)\n |-- event_driven: boolean (nullable \u003d true)\n\n+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|     id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|\n+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|5252000|       29806|               30|      20|0018/ 050C00471|2018-12-01 05:06:27|            76|          6|       false|\n|5278394|       29808|               30|      20|0018/ 050C00473|2018-12-03 09:08:48|            95|          2|       false|\n+-------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\nonly showing top 2 rows\n\nimport org.apache.spark.sql.types.BooleanType\nszn2018122019Q3_2: org.apache.spark.sql.DataFrame \u003d [id: int, container_id: int ... 8 more fields]\nszn2018122019Q3_3: org.apache.spark.sql.DataFrame \u003d [id: int, container_id: int ... 7 more fields]\nszn2018122019Q3_4: org.apache.spark.sql.DataFrame \u003d [id: int, container_id: int ... 7 more fields]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d211",
            "http://62067575309b:4040/jobs/job?id\u003d212",
            "http://62067575309b:4040/jobs/job?id\u003d213"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572256941207_1629444319",
      "id": "20191028-100221_916573721",
      "dateCreated": "2019-10-28 10:02:21.208",
      "dateStarted": "2019-10-28 12:25:31.353",
      "dateFinished": "2019-10-28 12:25:31.881",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// muzem nyni spojit 2 dataframe, vznika nam struktura DataSet s totoznyma operacema akorat ze zastresuje 2 dataframy\nval szn \u003d szn2019q4.union(szn2018122019Q3_3)\nszn.show(2)",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 11:19:37.701",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|      id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|15270292|       30046|               50|      20|0003/ 014C00513|2019-10-01 05:00:41|           100|          1|       false|\n|15270477|       30327|               30|      20|0001/ 002C01582|2019-10-01 05:01:47|            38|          1|       false|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\nonly showing top 2 rows\n\nszn: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [id: int, container_id: int ... 7 more fields]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d11"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572259302765_203490331",
      "id": "20191028-104142_118906941",
      "dateCreated": "2019-10-28 10:41:42.765",
      "dateStarted": "2019-10-28 10:42:16.497",
      "dateFinished": "2019-10-28 10:42:17.006",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## AKCE\n* *take*\n* *collect*\n* aggregační fce\n  * count\n  * min, max, avg\n  * sum, variance,...",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 12:43:02.394",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572261592448_-108368267",
      "id": "20191028-111952_432182074",
      "dateCreated": "2019-10-28 11:19:52.448",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// N zaznamu -\u003e podmmnozina\nszn.take(2)\n\n// N zaznamu -\u003e N zaznamu\nszn.collect()",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 11:47:40.403",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res40: Array[org.apache.spark.sql.Row] \u003d Array([15270292,30046,50,20,0003/ 014C00513,2019-10-01 05:00:41.0,100,1,false], [15270477,30327,30,20,0001/ 002C01582,2019-10-01 05:01:47.0,38,1,false])\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d117"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572261610375_80891810",
      "id": "20191028-112010_1454345083",
      "dateCreated": "2019-10-28 11:20:10.375",
      "dateStarted": "2019-10-28 11:20:50.551",
      "dateFinished": "2019-10-28 11:20:50.791",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// COUNT\n// kolik mam zaznamu?\nval szn2019q4_count \u003d szn2019q4.count()\nval szn20182019q3_count \u003d szn2018122019Q3_3.count()\nval szn_count \u003d szn.count().longValue()\n\nprint(\"Počet záznamů:2019q4: \" + szn2019q4_count + \", 2018-2019q3: \" + szn20182019q3_count + \", dohromady tedy: \" +  szn_count)",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 11:47:37.005",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "szn2019q4_count: Long \u003d 1002\nszn20182019q3_count: Long \u003d 22987\nszn_count: Long \u003d 23989\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d33",
            "http://62067575309b:4040/jobs/job?id\u003d34",
            "http://62067575309b:4040/jobs/job?id\u003d35"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572259199571_-373008067",
      "id": "20191028-103959_1146384647",
      "dateCreated": "2019-10-28 10:39:59.571",
      "dateStarted": "2019-10-28 10:56:57.825",
      "dateFinished": "2019-10-28 10:56:58.521",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// získávání informací o datasetu\nszn.show(4)\n//TIP: dataframe szn budeme prepouzivat nekolikrat, co se ale deje ve skutecnosti, znovu nacteme data - znovu aplikujeme transformace a to pri kazde akci -\u003e cache()\nszn.cache()\n\n// pote co u nebudeme pouzivat nezapomene pamet uvlonit\n// szn.unpersist()",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 12:46:55.178",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|      id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|15270292|       30046|               50|      20|0003/ 014C00513|2019-10-01 05:00:41|           100|          1|       false|\n|15270477|       30327|               30|      20|0001/ 002C01582|2019-10-01 05:01:47|            38|          1|       false|\n|15270800|       30064|               30|      20|0003/ 035C00551|2019-10-01 05:12:45|            44|         16|       false|\n|15270879|       30116|               30|      20|0003/ 084C00644|2019-10-01 05:12:49|           100|         10|       false|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\nonly showing top 4 rows\n\nres82: szn.type \u003d [id: int, container_id: int ... 7 more fields]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d249"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572266735604_2099290271",
      "id": "20191028-124535_1200032620",
      "dateCreated": "2019-10-28 12:45:35.604",
      "dateStarted": "2019-10-28 12:46:55.213",
      "dateFinished": "2019-10-28 12:46:55.571",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// kolik unikátních odpadových kontejnerů máme\nval container_id\u003dszn.select(\"container_id\").distinct()\nval container_id_count \u003d container_id.count()\ncontainer_id.show(3)\n\n// jaká je nevyšší, nejnižší zaplněnost\nval minmax\u003d szn.select(min($\"percent_now\"), max($\"percent_now\"))\nminmax.show()\n\n// dalsi info\nval szn_ids\u003dszn.select(\"id\").distinct()\nval ids_count \u003d szn_ids.count()\nszn_ids.show(3)\n\nval pick_minfilllevel\u003dszn.select(\"pick_minfilllevel\").distinct()\npick_minfilllevel.show(4)\n\nval kod\u003dszn.select(\"code\").distinct()\nval kod_count \u003d kod.count()\nkod.show(10)\n\nval eventDriven\u003dszn.select(\"event_driven\").distinct()\nval eventDrivenCount \u003d eventDriven.count()\neventDriven.show(2)\n",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 12:47:02.893",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|      id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|15270292|       30046|               50|      20|0003/ 014C00513|2019-10-01 05:00:41|           100|          1|       false|\n|15270477|       30327|               30|      20|0001/ 002C01582|2019-10-01 05:01:47|            38|          1|       false|\n|15270800|       30064|               30|      20|0003/ 035C00551|2019-10-01 05:12:45|            44|         16|       false|\n|15270879|       30116|               30|      20|0003/ 084C00644|2019-10-01 05:12:49|           100|         10|       false|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\nonly showing top 4 rows\n\n+------------+\n|container_id|\n+------------+\n|       29993|\n|       29894|\n|       29834|\n+------------+\nonly showing top 3 rows\n\n+----------------+----------------+\n|min(percent_now)|max(percent_now)|\n+----------------+----------------+\n|               0|              50|\n+----------------+----------------+\n\n+--------+\n|      id|\n+--------+\n|15315806|\n|15328950|\n|15342350|\n+--------+\nonly showing top 3 rows\n\n+-----------------+\n|pick_minfilllevel|\n+-----------------+\n|               40|\n|               35|\n|               50|\n|               30|\n+-----------------+\n\n+---------------+\n|           code|\n+---------------+\n|0006/ 263C00234|\n|0003/ 024C00532|\n|0001/ 016C01532|\n|0001/ 038C00043|\n|0008/ 034C01384|\n|0010/ 265C00453|\n|0016/ 038C01422|\n|0001/ 035C01593|\n|0006/ 260C00165|\n|0009/ 157C00354|\n+---------------+\nonly showing top 10 rows\n\n+------------+\n|event_driven|\n+------------+\n|        null|\n|       false|\n+------------+\n\ncontainer_id: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [container_id: int]\ncontainer_id_count: Long \u003d 420\nminmax: org.apache.spark.sql.DataFrame \u003d [min(percent_now): int, max(percent_now): int]\nszn_ids: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [id: int]\nids_count: Long \u003d 13847\npick_minfilllevel: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [pick_minfilllevel: int]\nkod: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [code: string]\nkod_count: Long \u003d 429\neventDriven: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [event_driven: boolean]\neventDrivenCount: Long \u003d 2\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d227",
            "http://62067575309b:4040/jobs/job?id\u003d228",
            "http://62067575309b:4040/jobs/job?id\u003d229",
            "http://62067575309b:4040/jobs/job?id\u003d230",
            "http://62067575309b:4040/jobs/job?id\u003d231",
            "http://62067575309b:4040/jobs/job?id\u003d232",
            "http://62067575309b:4040/jobs/job?id\u003d233",
            "http://62067575309b:4040/jobs/job?id\u003d234",
            "http://62067575309b:4040/jobs/job?id\u003d235",
            "http://62067575309b:4040/jobs/job?id\u003d236",
            "http://62067575309b:4040/jobs/job?id\u003d237",
            "http://62067575309b:4040/jobs/job?id\u003d238",
            "http://62067575309b:4040/jobs/job?id\u003d239",
            "http://62067575309b:4040/jobs/job?id\u003d240",
            "http://62067575309b:4040/jobs/job?id\u003d241",
            "http://62067575309b:4040/jobs/job?id\u003d242",
            "http://62067575309b:4040/jobs/job?id\u003d243",
            "http://62067575309b:4040/jobs/job?id\u003d244",
            "http://62067575309b:4040/jobs/job?id\u003d245",
            "http://62067575309b:4040/jobs/job?id\u003d246",
            "http://62067575309b:4040/jobs/job?id\u003d247",
            "http://62067575309b:4040/jobs/job?id\u003d248"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572260215376_-115532283",
      "id": "20191028-105655_287503105",
      "dateCreated": "2019-10-28 10:56:55.376",
      "dateStarted": "2019-10-28 12:45:06.450",
      "dateFinished": "2019-10-28 12:45:14.102",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// TODO md\n// TIPS \u0026 TRICKS\n\n// v cem se casto chybuje \nval df \u003d szn.filter(\"percent_now\" \u003e 50)\n\n// projde\nval df \u003d szn.filter(szn(\"percent_now\") \u003e 20)\n\n// syntax scala zkratka $\nval need \u003d szn.filter($\"percent_now\" \u003e 20)\nneed.show()",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 12:26:39.927",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572262741047_-462877348",
      "id": "20191028-113901_174018730",
      "dateCreated": "2019-10-28 11:39:01.047",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Transformace (typicky) Wide: (můžou způsobit shuffle)\n\n* groupByKey\n   * groupBy, agg{...} \n* reduceByKey\n* combineByKey\n* *distinct*\n* intersection\n* repartition\n* *coalesce*\n* cogroup\n* groupWith\n* join\n   * leftOuterJoin\n   * rightOuterJoin",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 13:29:38.192",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572262868415_-982572511",
      "id": "20191028-114108_1299416038",
      "dateCreated": "2019-10-28 11:41:08.416",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "szn.show(5)",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 12:27:22.070",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|      id|container_id|pick_minfilllevel|decrease|           code|        pick_at_utc|percent_before|percent_now|event_driven|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\n|15270292|       30046|               50|      20|0003/ 014C00513|2019-10-01 05:00:41|           100|          1|       false|\n|15270477|       30327|               30|      20|0001/ 002C01582|2019-10-01 05:01:47|            38|          1|       false|\n|15270800|       30064|               30|      20|0003/ 035C00551|2019-10-01 05:12:45|            44|         16|       false|\n|15270879|       30116|               30|      20|0003/ 084C00644|2019-10-01 05:12:49|           100|         10|       false|\n|15271061|       29927|               30|      20|0006/ 262C00242|2019-10-01 05:19:44|           100|          0|       false|\n+--------+------------+-----------------+--------+---------------+-------------------+--------------+-----------+------------+\nonly showing top 5 rows\n\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d214"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572265628651_-453886198",
      "id": "20191028-122708_279857358",
      "dateCreated": "2019-10-28 12:27:08.651",
      "dateStarted": "2019-10-28 12:27:22.107",
      "dateFinished": "2019-10-28 12:27:22.501",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//groupBy: kolikrat byl ktery kontejner vysypan v unoru 2019?\nval vysypan\u003dszn.select($\"container_id\",$\"pick_at_utc\")\nval vysypan2 \u003d vysypan.filter($\"pick_at_utc\".contains(\"2019-02\"))\nval vysypan3 \u003d vysypan2.groupBy(\"container_id\").count()\nvysypan3.show(5)\n",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 13:06:30.140",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------+-----+\n|container_id|count|\n+------------+-----+\n|       29894|   12|\n|       29993|    2|\n|       29950|   14|\n|       29827|   10|\n|       30330|   22|\n+------------+-----+\nonly showing top 5 rows\n\nvysypan: org.apache.spark.sql.DataFrame \u003d [container_id: int, pick_at_utc: timestamp]\nvysypan2: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [container_id: int, pick_at_utc: timestamp]\nvysypan3: org.apache.spark.sql.DataFrame \u003d [container_id: int, count: bigint]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d286",
            "http://62067575309b:4040/jobs/job?id\u003d287"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572260805656_217973668",
      "id": "20191028-110645_1932819943",
      "dateCreated": "2019-10-28 11:06:45.656",
      "dateStarted": "2019-10-28 13:06:30.191",
      "dateFinished": "2019-10-28 13:06:30.983",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.sql.functions._\nval vysypan_datum \u003d vysypan.withColumn(\"date\", substring($\"pick_at_utc\",0,10)).withColumn(\"year\", substring($\"pick_at_utc\",0,4)).withColumn(\"month\", substring($\"pick_at_utc\",6,2)).drop($\"pick_at_utc\")\nvysypan_datum.show(3)",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 13:19:17.697",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------+----------+----+-----+\n|container_id|      date|year|month|\n+------------+----------+----+-----+\n|       30046|2019-10-01|2019|   10|\n|       30327|2019-10-01|2019|   10|\n|       30064|2019-10-01|2019|   10|\n+------------+----------+----+-----+\nonly showing top 3 rows\n\nimport org.apache.spark.sql.functions._\nvysypan_datum: org.apache.spark.sql.DataFrame \u003d [container_id: int, date: string ... 2 more fields]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d298"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572268246279_-1310818873",
      "id": "20191028-131046_807834183",
      "dateCreated": "2019-10-28 13:10:46.279",
      "dateStarted": "2019-10-28 13:19:17.749",
      "dateFinished": "2019-10-28 13:19:18.281",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// multi aggreagace - lze spojovat\nimport org.apache.spark.sql.functions\n\nval agg1 \u003d vysypan_datum.groupBy(\"year\",\"month\").agg(\n    functions.count(\"date\").as(\"celkem\")\n).sort(\"year\",\"month\")\nagg1.show()\n\nagg1.groupBy(\"year\").agg(\n    functions.max(\"celkem\").as(\"nejvice v mesici\"),\n    functions.min(\"celkem\").as(\"nejmin v mesici\")\n).sort(\"year\").show();",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 13:28:37.812",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----+-----+------+\n|year|month|celkem|\n+----+-----+------+\n|2018|   12|   574|\n|2019|   01|  1686|\n|2019|   02|  2234|\n|2019|   03|  2599|\n|2019|   04|  2600|\n|2019|   05|  3033|\n|2019|   06|  2734|\n|2019|   07|  3193|\n|2019|   08|  2781|\n|2019|   09|  1553|\n|2019|   10|  1002|\n+----+-----+------+\n\n+----+----------------+---------------+\n|year|nejvice v mesici|nejmin v mesici|\n+----+----------------+---------------+\n|2018|             574|            574|\n|2019|            3193|           1002|\n+----+----------------+---------------+\n\nimport org.apache.spark.sql.functions\nagg1: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [year: string, month: string ... 1 more field]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d308",
            "http://62067575309b:4040/jobs/job?id\u003d309",
            "http://62067575309b:4040/jobs/job?id\u003d310"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572266280608_-1003236390",
      "id": "20191028-123800_1146633843",
      "dateCreated": "2019-10-28 12:38:00.608",
      "dateStarted": "2019-10-28 13:27:59.503",
      "dateFinished": "2019-10-28 13:28:03.972",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "agg1.registerTempTable(\"rok_mesic_vyneseni\")",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 13:31:04.311",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572269399374_-1921171900",
      "id": "20191028-132959_737440955",
      "dateCreated": "2019-10-28 13:29:59.375",
      "dateStarted": "2019-10-28 13:31:04.346",
      "dateFinished": "2019-10-28 13:31:04.760",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nselect * from rok_mesic_vyneseni",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 13:32:58.154",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": true,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "year",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "month",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "celkem",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "year": "string",
                      "month": "string",
                      "celkem": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": true
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "month",
                  "index": 1.0,
                  "aggr": "sum"
                },
                {
                  "name": "year",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "month",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "year\tmonth\tcelkem\n2018\t12\t574\n2019\t01\t1686\n2019\t02\t2234\n2019\t03\t2599\n2019\t04\t2600\n2019\t05\t3033\n2019\t06\t2734\n2019\t07\t3193\n2019\t08\t2781\n2019\t09\t1553\n2019\t10\t1002\n"
          },
          {
            "type": "TEXT",
            "data": ""
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://62067575309b:4040/jobs/job?id\u003d311"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1572269390461_1502823874",
      "id": "20191028-132950_743763809",
      "dateCreated": "2019-10-28 13:29:50.461",
      "dateStarted": "2019-10-28 13:31:24.260",
      "dateFinished": "2019-10-28 13:31:25.527",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## K procvičení (když zbude čas)\n### Formáty\n* parquet\n  * defaultní pro Spark\n  * binární formát\n  * column oriented\n  * hodí se pro projekce (potřebuji z velkých dat, pouze některé sloupčeky)\n* avro\n* csv,tsv\n* json\n   * výhody:\n     * lehce se čte i ostatním mimo Big Data svět (webaři, data science)\n  * pozor: validní json je co file to {}, pro big data se ovšeh hodí pouze validní json per file (správně je ten formát názvem GSON) ",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 09:44:32.729",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eK procvičení (když zbude čas)\u003c/h2\u003e\n\u003ch3\u003eFormáty\u003c/h3\u003e\n\u003cul\u003e\n  \u003cli\u003eparquet\u003c/li\u003e\n  \u003cli\u003edefaultní pro Spark\u003c/li\u003e\n  \u003cli\u003ebinární formát\u003c/li\u003e\n  \u003cli\u003ecolumn oriented\u003c/li\u003e\n  \u003cli\u003ehodí se pro projekce (potřebuji z velkých dat, pouze některé sloupčeky)\u003c/li\u003e\n  \u003cli\u003eavro\u003c/li\u003e\n  \u003cli\u003ecsv,tsv\u003c/li\u003e\n  \u003cli\u003ejson\u003c/li\u003e\n  \u003cli\u003evýhody:\n    \u003cul\u003e\n      \u003cli\u003elehce se čte i ostatním mimo Big Data svět (webaři, data science)\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003epozor: validní json je co file to {}, pro big data se ovšeh hodí pouze validní json per file (správně je ten formát názvem GSON)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572253285426_-1226990686",
      "id": "20191028-090125_948111294",
      "dateCreated": "2019-10-28 09:01:25.426",
      "dateStarted": "2019-10-28 09:44:17.757",
      "dateFinished": "2019-10-28 09:44:17.808",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "case class Person(name: String, age: Long)\n\n// Encoders are created for case classes\nval caseClassDS \u003d Seq(Person(\"Andy\", 32)).toDS()\ncaseClassDS.show()\n// +----+---+\n// |name|age|\n// +----+---+\n// |Andy| 32|\n// +----+---+\n\n// Encoders for most common types are automatically provided by importing spark.implicits._\nval primitiveDS \u003d Seq(1, 2, 3).toDS()\nprimitiveDS.map(_ + 1).collect() // Returns: Array(2, 3, 4)\n\n// DataFrames can be converted to a Dataset by providing a class. Mapping will be done by name\nval path \u003d \"examples/src/main/resources/people.json\"\nval peopleDS \u003d spark.read.json(path).as[Person]\npeopleDS.show()\n// +----+-------+\n// | age|   name|\n// +----+-------+\n// |null|Michael|\n// |  30|   Andy|\n// |  19| Justin|\n// +----+-------+",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 12:39:51.871",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cconsole\u003e:16: error: value toDS is not a member of Seq[Person]\n       val caseClassDS \u003d Seq(Person(\"Andy\", 32)).toDS()\n                                                 ^\n\u003cconsole\u003e:25: error: value toDS is not a member of Seq[Int]\n       val primitiveDS \u003d Seq(1, 2, 3).toDS()\n                                      ^\n\u003cconsole\u003e:30: error: Unable to find encoder for type stored in a Dataset.  Primitive types (Int, String, etc) and Product types (case classes) are supported by importing spark.implicits._  Support for serializing other types will be added in future releases.\n       val peopleDS \u003d spark.read.json(path).as[Person]\n                                              ^\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1572266331563_985753239",
      "id": "20191028-123851_1861184664",
      "dateCreated": "2019-10-28 12:38:51.564",
      "dateStarted": "2019-10-28 12:39:51.872",
      "dateFinished": "2019-10-28 12:39:51.974",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "read avro, read , json - show",
      "user": "anonymous",
      "dateUpdated": "2019-10-28 09:44:39.519",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1572255601414_941758733",
      "id": "20191028-094001_257022356",
      "dateCreated": "2019-10-28 09:40:01.414",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "spark-simple",
  "id": "2ER33N1G1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}